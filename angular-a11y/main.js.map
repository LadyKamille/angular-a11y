{"version":3,"sources":["./src/environments/environment.ts","./src/app/repo-list/repo-list.service.ts","./src/app/repo-list/repo-list.component.ts","./src/app/repo-list/repo-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepoListService {\n  constructor(private http: HttpClient) { }\n\n  getRepos() {\n    return this.http.get(`https://api.github.com/users/LadyKamille/repos`)\n      .pipe(\n        map((response: any) => {\n          return response?.map((item: any) => item);\n        }),\n        retry(3), // retry a failed request up to 3 times\n      )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { RepoListService } from './repo-list.service';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-repo-list',\n  templateUrl: './repo-list.component.html',\n  styleUrls: ['./repo-list.component.scss']\n})\nexport class RepoListComponent implements OnInit {\n  error$ = new Subject<boolean>();\n  repos$!:Observable<any>;\n\n  constructor(private repoListService: RepoListService) { }\n\n  ngOnInit(): void {\n    this.repos$ = this.repoListService.getRepos().pipe(\n      catchError((error) => {\n        console.error('error loading the list of users', error);\n        this.error$.next(error?.message);\n        return of();\n      })\n    );\n  }\n\n}\n","<div *ngIf=\"repos$ | async as repos; else loadingOrError\">\n  <h1>My Repos</h1>\n\n  <mat-grid-list cols=\"4\" rowHeight=\"4:1\">\n    <mat-grid-tile *ngFor=\"let repo of repos\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title>{{ repo.name }}</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <p>\n            {{ repo.description }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n\n<ng-template #loadingOrError>\n  <div *ngIf=\"error$ | async as error; else loading\">\n    <mat-card class=\"error-card\">\n      <mat-card-title-group class=\"error-title\">\n        <mat-icon aria-hidden=\"true\" color=\"warn\" class=\"error-icon\">error</mat-icon>\n        <mat-card-title class=\"title\">\n          <h1>Oops! There was an error!</h1>\n        </mat-card-title>\n      </mat-card-title-group>\n      <mat-card-content class=\"error-content\">\n        <p>{{error}}</p>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <ng-template #loading>\n    <mat-spinner></mat-spinner>\n  </ng-template>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-a11y';\n}\n","<router-outlet></router-outlet>\n<app-repo-list></app-repo-list>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RepoListComponent } from './repo-list/repo-list.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatCardModule,\n    MatGridListModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [MatCardModule, MatIconModule, MatGridListModule],\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}